<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <!-- jQuery (required by DataTables) -->
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"
        integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>


    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4"
        crossorigin="anonymous"></script>


    <!-- DataTables CSS -->
    <link href="https://cdn.datatables.net/1.13.6/css/dataTables.bootstrap5.min.css" rel="stylesheet">

    <!-- DataTables JS -->
    <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.6/js/dataTables.bootstrap5.min.js"></script>

    <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>




    <link rel="icon" type="image/x-icon" href="/public/images/pgsdn.png">

    <title>Account Management System</title>

    <style>
        #accountsTable td {
            padding: 12px 15px;
            /* Adjust the padding as needed */
        }

        .status-container {
            display: flex;
            align-items: center;
            font-size: large;
            gap: 5px;
        }
    </style>


    <nav class="navbar navbar-dark bg-dark navbar-expand-lg">
        <div class="container-fluid">
            <a class="navbar-brand fw-bold" href="#">F O L</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse"
                data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false"
                aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                    <li class="nav-item">
                        <a class="nav-link active" aria-current="page" href="#">Home</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link">Logs</a>
                    </li>
                </ul>
                <div class="d-flex">
                    <a href="/" class="btn btn-danger">Logout</a>
                </div>
            </div>
        </div>
    </nav>


</head>

<body style="background-color: #161b21;">


    <!-- Modal -->
    <div class="modal fade" id="createAcc" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
        aria-labelledby="createAccLabel" aria-hidden="true">
        <div class="modal-dialog">
            <form id="createAccountForm">
                <div class="modal-content">
                    <div class="modal-header">
                        <h1 class="modal-title fs-5" id="createAccLabel">Add New Account</h1>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">

                        <div class="mb-3">
                            <label for="name" class="form-label">Name:</label>
                            <input type="text" class="form-control" id="name" name="name" placeholder="Type name here"
                                required>
                        </div>

                        <div class="mb-3">
                            <label for="user" class="form-label">Username/Email:</label>
                            <input type="text" class="form-control" id="user" name="user" placeholder="Type email here"
                                required>
                        </div>

                        <div class="mb-3">
                            <label for="user" class="form-label">Remarks:</label>
                            <input type="text" class="form-control" id="remarks" name="remarks" placeholder="...">
                        </div>

                        <div class="mb-3 ">
                            <label for="password" class="form-label">Password:</label>
                            <input type="text" class="form-control border border-danger " id="pass" name="pass"
                                required>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Save</button>
                    </div>
                </div>
            </form>
        </div>
    </div>



    <!-- logs modals -->

    <!-- Modal -->
    <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-xl modal-dialog-centered modal-dialog-scrollable">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="exampleModalLabel">History Logs</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div>
                        <table id="logsTable" class="display table-bordered table-striped" style="width: 100%;">
                            <thead>
                                <tr>
                                    <th class="p-2">User</th>
                                    <th class="p-2">Action Taken</th>
                                    <th class="p-2">Account Affected</th>
                                    <th class="p-2">Timestamp</th>
                                </tr>
                            </thead>
                            <tbody>

                            </tbody>
                        </table>

                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary">Save changes</button>
                </div>
            </div>
        </div>
    </div>






    <div class="container-fluid p-0 mt-5">

        <div class=" d-flex align-items-center justify-content-center  border border-dark ">

            <div class="col-12 col-lg-10 p-0 m-0 rounded-3 bg-white" style="height: fit-content; ">
                <div class="bg-dark p-3 d-flex justify-content-between rounded" style="background-color: #1B1A24;">
                    <h1 class="text-white fw-bold m-0">Dashboard</h1>
                    <!-- Button trigger modal -->
                    <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#createAcc">
                        Add New Account
                    </button>
                </div>

                <div class="row p-3">
                    <div class="col-4 col-lg-2">
                        <div class="card shadow-lg"
                            style="background: linear-gradient(110deg, #fdcd3b 60%, #ffed4b 60%);">
                            <h5 class="card-header ">Total Accounts</h5>
                            <div class="card-body bg-white rounded">
                                <h5 class="card-title fw-bold" id="AccountsCounts">0</h5>
                            </div>
                        </div>
                    </div>

                    <div class="col-4 col-lg-2">
                        <div class="card shadow-lg"
                            style="background: linear-gradient(110deg, #052f5f 60%, #005377 60%);">
                            <h5 class="card-header text-white">Finished Tasks</h5>
                            <div class="card-body bg-white rounded">
                                <h5 class="card-title fw-bold" id="TaskCounts">0</h5>
                            </div>
                        </div>
                    </div>

                    <% if (user.role==='admin' ) { %>
                        <div class="col-4 col-lg-2 d-flex flex-column justify-content-around">
                            <button type="button" class="btn btn-primary fw-bold" data-bs-toggle="modal"
                                data-bs-target="#exampleModal">
                                Logs
                            </button>
                            <button class="btn btn-danger fw-bold" onclick="resetTask()">Reset All Tasks</button>
                        </div>
                        <% } %>

                </div>

                <div class="m-3 p-2 border border-dark rounded">
                    <div class="d-flex gap-2">
                        <h2 class="m-0">Account List</h2> 
                        <button class="btn btn-success d-flex align-items-center p-1" onclick="tableRefresh()"><i class='bx bx-refresh bx-sm'></i></button>
                    </div>
                    <table id="accountsTable" class="display table-bordered table-striped" style="width: 100%;">
                        <thead>
                            <tr>
                                <th class="p-2">Name</th>
                                <th class="p-2">Email</th>
                                <th class="p-2">Status</th>
                                <th class="p-2">Remarks</th>
                                <th class="p-2">Action</th>
                            </tr>
                        </thead>
                        <tbody>

                        </tbody>
                    </table>
                </div>

            </div>

        </div>
    </div>

    </div>



    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>

        $(document).ready(function () {

            $('#createAccountForm').on('submit', function (e) {
                e.preventDefault();

                $.ajax({
                    url: '/create',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({
                        name: $('#name').val(),
                        user: $('#user').val(),
                        remarks: $('#user').val(),
                        pass: $('#pass').val()
                    }),
                    success: function (response) {
                        console.log(response);
                        Swal.fire({
                            title: "Account Added",
                            text: "New account added to list",
                            icon: "success"
                        });
                        $('#createAcc').modal('hide');
                        table.ajax.reload()
                        logsTable.ajax.reload()
                        
                    },
                    error: function (xhr, status, error) {
                        console.log('Error:', error);
                    }
                });
            });

        });


        var table = $('#accountsTable').DataTable({
            processing: true,
            serverSide: true,
            ajax: {
                url: '/getallaccounts',
                type: 'GET',
                dataSrc: 'dareta',
                dataSrc: function (response) {
                    console.log("Raw Response:", response); // Logs the raw response
                    let totalAccounts = response.recordsTotal
                    $('#AccountsCounts').text(totalAccounts)
                    $('#TaskCounts').text(response.done)
                    return response.data; // Return the data array to populate the table
                }
            },

            columnDefs: [
                { orderable: true, className: 'reorder', targets: 2 },
                { orderable: false, targets: '_all' }
            ],
            columns: [
                { data: 'name' },
                { data: 'user' },
                {
                    data: 'status',
                    render: function (data, type, row) {
                        if (data === 'Done') {
                            return `<div class='status-container'>Done <i class='bx bxs-check-circle fs-2 text-success'></i></div>`; // Bootstrap icon for check
                        } else {
                            return ' '; // Optional icon for other statuses
                        }
                    },
                },
                { data: 'remarks' },
                {
                    data: null,
                    render: function (data, type, row) {
                        // Render a button in each row
                        return `
                        <button class="btn btn-sm btn-primary" onclick="login('${row.name}','${row.user}','${row.pass}','${row._id}')">Login</button>
                        <% if (user.role === 'admin') { %>
                            <button class="btn btn-sm btn-danger" onclick="deleteAccount('${row._id}')">Delete</button>
                        <% } %>
                        `;
                    }
                }
            ],

        });


        

        var logsTable = $('#logsTable').DataTable({
            processing: true,
            serverSide: true,
            ajax: {
                url: '/getalllogs',
                type: 'GET',
            },
            columns: [
                { data: 'user' },
                { data: 'action' },
                { data: 'account' },
                { data: 'createdAt' },
                
            ],
        })

        function login(name, user, pass, id) {

            Swal.fire({
                title: "Do you want to Login this Account?",
                html: `<b>${name}</b>`,
                icon: 'question',
                showCancelButton: true,
                confirmButtonText: "Yes",
            }).then((result) => {
                /* Read more about isConfirmed, isDenied below */
                if (result.isConfirmed) {

                    $.ajax({
                        url: '/login',
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify({
                            id: id,
                            user: user,
                            pass: pass
                        }),
                        success: function (response) {
                            console.log(response);
                            if (response.success == true) {
                                table.ajax.reload()
                                logsTable.ajax.reload()
                            }
                        },
                        error: function (xhr, status, error) {
                            console.log('Error:', error);
                        }
                    });

                } else if (result.isDenied) {
                    Swal.fire("Changes are not saved", "", "info");
                }
            });



        }


        <% if (user.role === 'admin') { %>

            function deleteAccount(id) {

                Swal.fire({
                    title: "Do you want to save the changes?",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: "Delete Account?",
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: '/deleteAccount',
                            type: 'POST',
                            contentType: 'application/json',
                            data: JSON.stringify({
                                id: id,
                            }),
                            success: function (response) {
                                console.log(response);
                                if (response.success == true) {
                                    Swal.fire("Saved!", "", "success");
                                    table.ajax.reload()
                                    logsTable.ajax.reload()
                                }
                            },
                            error: function (xhr, status, error) {
                                console.log('Error:', error);
                            }
                        });
                    } else if (result.isDenied) {
                        Swal.fire("Changes are not saved", "", "info");
                    }
                });



            }

            function tableRefresh(){
                table.ajax.reload()
                logsTable.ajax.reload()
            }


            function resetTask() {

                Swal.fire({
                    title: "Do you want to Reset all Task?",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: "Reset",
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: '/resettask',
                            type: 'GET',
                            success: function (response) {
                                console.log(response);
                                if (response.success == true) {
                                    Swal.fire("Saved!", "", "success");
                                    table.ajax.reload()
                                    logsTable.ajax.reload()
                                }
                            },
                            error: function (xhr, status, error) {
                                console.log('Error:', error);
                            }
                        });
                    } else if (result.isDenied) {
                        Swal.fire("Action Cancelled");
                    }
                });



            }

            <% } %>


    </script>

</body>

</html>